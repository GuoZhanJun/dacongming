#define _CRT_SECURE_NO_WARNINGS 1
//指针类型的意义
//1.指针类型决定了指针解引用操作符能访问几个字节 char*p;*p访问了一个字节，int*p;*p访问了四个字节
//2.指针类型决定了指针+1，-1加的或者减的几个字节：char *p;p+1跳过一个字节;int*p;p+1跳过了一个整形-四个字节
// 
// 
//整型提升（对于有符号的高位补1，对于无符号数的高位补0;)
//eg：
//#include <stdio.h>
//int main()
//{
//	char a = -1;
//	//100000000000000000000000000000001
//	//111111111111111111111111111111110
//	//111111111111111111111111111111111
//	//11111111
//	signed char b = -1;
//	//11111111
//	unsigned char c = -1;
//	//000000000000000000000000011111111
//	printf("a=%d,b=%d,c=%d", a, b, c);//-1;-1;255
//	return 0;
//}


//下列输出结果是？
#include <stdio.h>
int main()
{
	char a = -128;

	//100000000000000000000000010000000
	//111111111111111111111111101111111
	//111111111111111111111111110000000--补码
	//只能存一个字节八个比特位--10000000
	//整型提升后--111111111111111111111111110000000
	//%d-打印十进制的有符号数字;整型提升后--111111111111111111111111110000000（还是原来的补码）
	//想求十进制得算回原码
	//%u-打印十进制的无符号数字;整型提升后--111111111111111111111111110000000（%u让直接按照无符号数字打印--原码反码补码相同）
	//直接打印111111111111111111111111110000000换算为十进制
	printf("%u\n", a);
	return 0;
}
