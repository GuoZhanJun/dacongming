#define _CRT_SECURE_NO_WARNINGS 1
#include<stdlib.h>
#include<string.h>
#include<errno.h>
#include<stdio.h>
//动态内存管理
//malloc
//free
//calloc
//realloc


//普通形式开辟空间
//struct S
//{
//	char name[20];
//	int age;
//};
//
//int main()
//{
//	//struct S arr[50];//50个struct S 类型的数据
//	//30 -浪费
//	//60 -不够
//	return 0;
//}


//malloc和free
//void* malloc(size_t size);

int main()
{
	//向内存申请10个整型的空间
	int*p=(int*)malloc(10 * sizeof(int));
	if (p == NULL)
	{
		//打印开辟失败错误原因
		printf("%s\n", strerror(errno));
	}
	else
	{
		//正常使用空间
		int i = 0;
		for (i = 0; i < 10; i++)
		{
			*(p + i) = i;
		}
		for (i = 0; i < 10; i++)
		{
			printf("%d ",*(p+i));
		}
	}
	//当动态申请的空间不再使用的时候
	//应该还给空间
	free(p);
	p = NULL;//只有动态开辟的空间才可以使用free
	return 0;
}
