//1
int main()
{
	int a[5] = { 1,2,3,4,5 };
	int* ptr = (int*)(&a + 1);
	printf("%d\n", *(a + 1), *(ptr - 1));//2,5
	return 0;
}
//2
//假设p的值为0x100000，如下表达式的值分别为多少？
//已知结构体test的类型的变量大小为20个字节
struct Test
{
	int Num;
	char* pcName;
	short sDate;
	char cha[2];
	short sBa[4];
}*p;
int main()
{
	p =(struct Test*) 0x100000;
	printf("%p\n", p + 0x1);//0x00100014-结构体指针+1跳过一个结构体，一个结构体大小为20
	printf("%p\n", (unsigned long)p + 0x1);//0x00100001
	printf("%p\n", (unsigned int*)p + 0x1);//0x00100004-强转为int*跳过四个字节+1就是+4
	return 0;
}

//3
int main()
{
	int a[4] = { 1,2,3,4 };
	int* ptr1 = (int*)(&a + 1);
	int* ptr2 = (int*)((int)a + 1);
	printf("%x,%x", ptr1[-1], *ptr2);//4    02000000
	return 0;
}


//4
#include<stdio.h>
int main()
{
	int a[3][2] = { (0,1),(2,3),(4,5) };//逗号表达式，都是括号里的后一位数字、1、3、5
	int* p;
	p = a[0];//表示首元素地址
	printf("%d\n", p[0]);//1-p[0]==*(p+0)
	return 0;
}

//5
int main()
{
	int a[5][5];
	i*nt(p)[4];
	p = a;
	printf("%p,%d\n", &p[4][2]-&a[4][2], &p[4][2] - &a[4][2]);//p[4][2]==*（*（p+4）+2）
	return 0;//fffffffc -4
}
